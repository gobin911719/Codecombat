# The goal is to survive for 30 seconds, and keep the mines intact for at least 30 seconds.

def chooseStrategy():
    enemies = hero.findEnemies()
    # If you can summon a griffin-rider, return "griffin-rider"
    if hero.gold > hero.costOf("griffin-rider"):
        hero.summon("griffin-rider")
    # If there is a fangrider on your side of the mines, return "fight-back"
    fangrider = hero.findByType("fangrider")
    if (len(fangrider) > 0 and fangrider[0].pos.x < 38):
        return "fight-back"
    # Otherwise, return "collect-coins"
    else:
        return "collect-coins"

def commandAttack():
    # Command your griffin riders to attack ogres.
    for friend in hero.findFriends():
        enemy = friend.findNearestEnemy()
        if enemy:
            hero.command(friend, "attack", enemy)
    pass
    
def pickUpCoin():
    item = hero.findNearestItem()
    if item:
        hero.move(item.pos)
    
def heroAttack():
    # Your hero should attack fang riders that cross the minefield.
    target = hero.findNearest(hero.findByType("fangrider"))
    if target:
        if (hero.distanceTo(target) < 20):
            hero.move(target.pos)
        elif (hero.isReady("bash")):
            hero.bash(target)
        elif (hero.isReady("power-up")):
            hero.powerUp()
            hero.attack(target)
        elif (hero.isReady("cleave")):
            hero.cleave(target)
        else:
            hero.attack(target)
    
while True:
    commandAttack()
    strategy = chooseStrategy()
    if (strategy == "fight-back"):
        heroAttack()
    else:
        pickUpCoin()
    # Call a function, depending on what the current strategy is.

    
